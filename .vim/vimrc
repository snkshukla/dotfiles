set t_Co=256                  "enable 256 colors
colorscheme janah
autocmd ColorScheme janah highlight Normal ctermbg=235
" Stuff related to vim-plug

" install vim-plug if not installed
if empty(glob('~/.vim/autoload/plug.vim'))
  silent execute "!curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

Plug 'vim-ruby/vim-ruby'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'   " needed by fugitive to browse the file on github/remote
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-rails'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'chrisbra/csv.vim'
Plug 'bronson/vim-trailing-whitespace'
Plug 'Valloric/YouCompleteMe'
Plug 'thaerkh/vim-workspace'
Plug 'Yggdroot/indentLine'
" Plug 'thaerkh/vim-indentguides'
" Plug 'mhinz/vim-startify'
" Plug 'vim-scripts/vim-auto-save'
" Plug 'gabrielelana/vim-markdown'
" Plug 'chr4/nginx.vim' " plugin for nginx support. enable only when needed
" Plug 'ngmy/vim-rubocop'
" Plug 'majutsushi/tagbar'
" Plug 'bronson/vim-visual-star-search'
" Plug 'moll/vim-node'
" Plug 'JamshedVesuna/vim-markdown-preview'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

call plug#end()

" use Ag, the silver searcher with ack.vim
let g:ackprg = 'ag --nogroup --nocolor --column'

" Settings
set clipboard=unnamed           "To enable copy paste in vim
syntax enable                   "Turn on syntax highlighting
set number	                    "set the line number
set backspace=indent,eol,start  "Backspace over everything
set mouse=a                     "enabling mouse suppport
set wildmode=longest,list,full  "bash-like tab completion.
set wildmenu                    "first tab completes, second provides a list, third cycles through the options
setlocal wrap

" filetype settings
filetype on                     "Enable filetype detection
filetype indent on              "Enable filetype-specific indenting
filetype plugin on              "Enable filetype-specific plugins
autocmd FileType yaml setl indentkeys-=<:>

" Tab spacing related settings
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab                   "Replace tabs with spaces
set cursorline                  "Highlight current line
set hidden                      "Reuse Window for multiple buffers
set smartindent
set autoindent
set ignorecase                  "Case-insensitive searching.
set smartcase                   "But case-sensitive if expression contains a capital letter.
set incsearch                   "Search as you type

"Highlight Search
highlight Search ctermbg=208 ctermfg=Black cterm=NONE
set hlsearch

set updatetime=200

" Highlight trailing spaces.
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
" match                         "Disable above highlighting

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  " set grepprg=ag\ --nogroup\ --nocolor
endif

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" Enabling ruby extensions
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins
set laststatus=2      "Show the status line all the time
set showcmd           "Display incomplete commands.

" Buffer related settings:
set splitright
set splitbelow
" Key mappings

" Remap keys for switching between buffers
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

map <C-n> :NERDTreeToggle<CR>
nnoremap .. :FZF<CR>
" nnoremap <silent> <Leader>b :TagbarToggle<CR>
" nnoremap <leader>rr :!ruby %<CR>
" bind \ (backward slash) to grep shortcut
" command! -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
nnoremap \\ :Ag<CR>

" bind cp command to copy the path of the current file
nnoremap cp :let @+ = expand("%")<CR>

" vim readme plugin
" let vim_markdown_preview_github=1

" let g:auto_save = 1  " enable AutoSave on Vim startup
" let g:auto_save_silent = 1  " do not display the auto-save notification

"Airline configuration
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamenod = ':t'
let g:airline_powerline_fonts = 1

"enabling displaying index of the buffer.
let g:airline#extensions#tabline#buffer_idx_mode = 1
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>a <Plug>AirlineSelectPrevTab
nmap <leader>f <Plug>AirlineSelectNextTab
nnoremap <leader>d :bd\|bd #<CR>
nnoremap <leader>s :Buffers<CR>
